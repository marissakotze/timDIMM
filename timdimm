#!/usr/bin/env python

from Tkinter import *
import os

def run(program, *args):
    pid = os.fork()
    if not pid:
       os.execvp(program, (program,) + args)
    return pid

def massreboot(b):
    print "Sending shutdown to MASS computer..."
    os.system("ssh massdimm@massdimm \"sudo shutdown -r now\"")

def park(b, pid):
    b.config(state=DISABLED)
    print "\nParking MASS and telescope....\n"
    os.system("./park")
    b.config(text="Initialize")
    quit.config(state=NORMAL)
    main.config(state=DISABLED)
    b.config(state=NORMAL)
    b.config(command=lambda c=b: init(c))
    
def init(b):
    print "\nInitializing mount and MASS....\n"
    pid = run("./init")
    quit.config(state=DISABLED)
    main.config(state=NORMAL)
    b.config(text="Park")
    b.config(command=lambda but=b,p=pid: park(but, p))

def killdimm9(b, pid):
    print "\nKilling DS9 process #%d\n" % pid
    os.system("kill -9 %d" % pid)
    os.system("killall ds9")
    b.config(relief=RAISED)
    b.config(text="DS9 DIMM Viewer")
    b.config(command=lambda c=b: dimm9(c))
    
def dimm9(b):
    pid = run("./dimm9")
    b.config(relief=SUNKEN)
    b.config(text="Kill DS9")
    b.config(command=lambda but=b,p=pid: killdimm9(but, p))

def killmeasure_seeing(b, pid):
    print "\nKilling main timDIMM process #%d\n" % pid
    b.config(text="Stopping...")
    b.config(state=DISABLED)
    os.system("kill -9 %d" % pid)
    os.system("./turbina.rb stop_now")
    b.config(text="Measure Seeing")
    initpark.config(state=NORMAL)
    b.config(state=NORMAL)
    b.config(command=lambda c=b: measure_seeing(c))
    
def measure_seeing(b):
    pid = run("./timdimm.sh")
    b.config(text="Stop Measuring Seeing")
    initpark.config(state=DISABLED)
    b.config(command=lambda but=b,p=pid: killmeasure_seeing(but, p))

root = Tk()
root.title("timDIMM")
root.geometry("200x200-0-0")

frame = Frame(root)
frame.pack()

#reboot = Button(frame, text="Reboot MASS Computer")
#reboot.pack(padx=10, pady=5, fill=X)
#reboot.config(command=lambda b=reboot: massreboot(b))

ds9 = Button(frame, text="DS9")
ds9.pack(padx=10, pady=5, fill=X)
ds9.config(command=lambda b=ds9: dimm9(b))

initpark = Button(frame, text="Initialize")
initpark.pack(padx=10, pady=5, fill=X)
initpark.config(command=lambda b=initpark: init(b))

main = Button(frame, text="Measure Seeing", width=180)
main.pack(padx=10, pady=5, expand=True, fill=X)
main.config(command=lambda b=main: measure_seeing(b))

quit = Button(frame, text="QUIT", fg="red", command=frame.quit)
quit.pack(pady=20, padx=10, fill=BOTH)

os.system("./tcp_serial_redirect.py -P 7001 /dev/tty.usbserial-A700dzoI >& serial.log &")

root.mainloop()
